"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[5830],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),d=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=d(e.components);return o.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),c=d(n),u=r,h=c["".concat(p,".").concat(u)]||c[u]||m[u]||a;return n?o.createElement(h,i(i({ref:t},l),{},{components:n})):o.createElement(h,i({ref:t},l))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:r,i[1]=s;for(var d=2;d<a;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},29800:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var o=n(87462),r=(n(67294),n(3905));const a={},i="Commit funds to a Head",s={unversionedId:"dev/commit_to_a_Head",id:"dev/commit_to_a_Head",title:"Commit funds to a Head",description:"In order to transact inside of a Head on L2 users need to have some funds",source:"@site/docs/dev/commit_to_a_Head.md",sourceDirName:"dev",slug:"/dev/commit_to_a_Head",permalink:"/head-protocol/unstable/docs/dev/commit_to_a_Head",draft:!1,editUrl:"https://github.com/cardano-scaling/hydra/tree/master/docs/docs/dev/commit_to_a_Head.md",tags:[],version:"current",frontMatter:{},sidebar:"developerDocumentation",previous:{title:"Protocol",permalink:"/head-protocol/unstable/docs/dev/protocol"},next:{title:"Architecture",permalink:"/head-protocol/unstable/docs/dev/architecture/"}},p={},d=[{value:"Commit process",id:"commit-process",level:3},{value:"Recovering the deposited funds",id:"recovering-the-deposited-funds",level:3}],l={toc:d},c="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"commit-funds-to-a-head"},"Commit funds to a Head"),(0,r.kt)("p",null,"In order to transact inside of a Head on L2 users need to have some funds\navailable before staring the Head protocol."),(0,r.kt)("p",null,"In addition to public key outputs users can also commit script outputs to a\nHead in order to accomodate different usecases for dApps and add custom validator logic."),(0,r.kt)("p",null,"We can distinguish two types of commits:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Commit before the Head is open"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Commit when the Head is already opened (incremental commits)")))),(0,r.kt)("p",null,"Both types of commits are pretty similar from the user perspective but the latter one\nis more useful since it depreciates the old behavior where the users needed to\nhave available funds before the Head protocol can actually be started."),(0,r.kt)("p",null,"In order to commit a ",(0,r.kt)("inlineCode",{parentName:"p"},"UTxO")," user owns on L1 they can choose to do what we call\na ",(0,r.kt)("em",{parentName:"p"},"simple")," or a ",(0,r.kt)("em",{parentName:"p"},"blueprint")," commit."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Simple"))," here means the user wants to commit a public key output to a Head in\nwhich case they only need to show the JSON representation of the ",(0,r.kt)("inlineCode",{parentName:"p"},"UTxO")," they\nown."),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"blueprint"))," option requires providing the ",(0,r.kt)("em",{parentName:"p"},"blueprint")," transaction\ntogether with the ",(0,r.kt)("inlineCode",{parentName:"p"},"UTxO")," it spends to be able to have more fine grained control\nover the commit process. Note that in this case ",(0,r.kt)("inlineCode",{parentName:"p"},"hydra-node")," ignores any\noutputs of a user transaction and is only concerned with the ",(0,r.kt)("strong",{parentName:"p"},"inputs")," it spends."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"For example when committing a script ",(0,r.kt)("inlineCode",{parentName:"p"},"UTxO")," and when more control of some of\nthe transaction attributes is needed (lower/upper validity bounds, custom\nredeemers, reference inputs etc.)")),(0,r.kt)("h3",{id:"commit-process"},"Commit process"),(0,r.kt)("p",null,"Both commit options mentioned should not be different from the users\nperspective and the only difference is ",(0,r.kt)("em",{parentName:"p"},"when")," commit is made in the Head\n",(0,r.kt)("a",{parentName:"p",href:"./../protocol-overview#hydra-head-lifecycle"},"lifecycle")," - before or after the Head is opened."),(0,r.kt)("p",null,"In any case user needs to have the ",(0,r.kt)("inlineCode",{parentName:"p"},"hydra-node")," running and be able to issue a\nrequest which is already described in more detailed\n",(0,r.kt)("a",{parentName:"p",href:"./../how-to/incremental-commit"},"simple")," and\n",(0,r.kt)("a",{parentName:"p",href:"./../how-to/commit-blueprint"},"blueprint")," tutorials."),(0,r.kt)("p",null,"Upon succesfull request ",(0,r.kt)("inlineCode",{parentName:"p"},"hydra-node")," returns a transaction to the user which\nthen they need to sign and submit to the L1 network."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"hydra-node")," constantly observes interesting L1 transactions and in case the\nHead is not yet opened it would wait for all other Head participants to commit\nbefore the Head protocol starts."),(0,r.kt)("p",null,"When the Head is already opened we are talking about ",(0,r.kt)("em",{parentName:"p"},"incremental commit")," and\nwhat happens ",(0,r.kt)("em",{parentName:"p"},"under the hood")," is a bit different."),(0,r.kt)("p",null,"To be able to commit to a running Head ",(0,r.kt)("inlineCode",{parentName:"p"},"hydra-node")," would lock the provided\n",(0,r.kt)("inlineCode",{parentName:"p"},"UTxO")," in the ",(0,r.kt)("strong",{parentName:"p"},"deposit")," script output controlled by the ",(0,r.kt)("inlineCode",{parentName:"p"},"hydra-node"),"."),(0,r.kt)("p",null,"It would also set the deadline by which this locked ",(0,r.kt)("inlineCode",{parentName:"p"},"UTxO")," needs to be picked\nup and made available inside of L2 by posting a ",(0,r.kt)("strong",{parentName:"p"},"increment")," transaction. This\nalso happens automatically but here we want to describe this process and bring\nit closer to Hydra users."),(0,r.kt)("p",null,"It is worthwhile mentioning that deposit deadline is double the value used for\ncontestation period. This gives the users control by specifying the\ncontestation period it in the arguments to ",(0,r.kt)("inlineCode",{parentName:"p"},"hydra-node")," executable."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Deadline information is present in the ",(0,r.kt)("inlineCode",{parentName:"p"},"CommitRecorded")," API server output.")),(0,r.kt)("h3",{id:"recovering-the-deposited-funds"},"Recovering the deposited funds"),(0,r.kt)("p",null,"If for some reason ",(0,r.kt)("inlineCode",{parentName:"p"},"hydra-node")," failed to observe the deposit there is a\n",(0,r.kt)("strong",{parentName:"p"},"recover")," process in place so that users can always have a way to unlock\ntheir funds."),(0,r.kt)("p",null,"If the deadline is reached and the requested commit didn't show up on L2\nusers can request a recover by providing a ",(0,r.kt)("inlineCode",{parentName:"p"},"TxId")," of the deposit transaction\nwhich initially locked the funds."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Users can also request to see pending deposits. See our api ",(0,r.kt)("a",{parentName:"p",href:"/api-reference/#operation-publish-/commits"},"documentation"),".")),(0,r.kt)("p",null,"Any Head participant can request to recover the deposit not only the one which initially deposited the funds."))}m.isMDXComponent=!0}}]);